// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                   @id @default(cuid())
  name                String?
  email               String                   @unique
  password            String
  emailVerified       DateTime?
  image               String?
  role                Role                     @default(HR)
  hrProfile           HRProfile?
  accounts            Accounts[]
  session             Session[]
  verificationTokens  EmailVerificationToken[]
}

model EmailVerificationToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  expires   DateTime
  createdAt DateTime @default(now())
}

enum Role {
  HR
  EMPLOYEE
  ADMIN
}

model Accounts {
  id String @id @default(cuid())
  userId String
  type String
  provider String
  providerAccountId String
  refresh_token String?
  access_token String?
  expires_at Int?
  token_type String?
  scope String?
  id_token String?
  session_state String?
  user User @relation(fields: [userId], references: [id])
}

model Session {
  id String @id @default(cuid())
  sessionToken String @unique
  userId String
  expires DateTime
  user User @relation(fields: [userId], references: [id])
}

model HRProfile {
  id String @id @default(cuid())
  user User @relation(fields: [userId],references: [id])
  userId String @unique
  company String?
  employees Employee[]
}

model Employee {
  id String @id @default(cuid())
  hrId String
  firstName String
  lastName String
  email String @unique
  position String?
  hiredAt DateTime @default(now())
  active Boolean @default(true)
  hrProfile HRProfile @relation(fields: [hrId], references: [id], onDelete: Cascade)
}

